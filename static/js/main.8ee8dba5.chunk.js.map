{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectUserId","useState","value","setValue","select","setSelect","list","setList","useEffect","filter","todo","title","includes","completed","className","type","placeholder","onChange","event","target","map","cn","TodoList__item","checked","readOnly","onClick","userId","id","BASE_URL","getUrl","endpoint","a","fetch","response","ok","Error","json","CurrentUser","user","setUser","error","setError","getUser","then","catch","name","email","phone","App","selectedUserId","setSelectedUserId","setTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ee8dba5.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  selectUserId: (userId: number) => (void),\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, selectUserId }) => {\n  const [value, setValue] = useState('');\n  const [select, setSelect] = useState('');\n  const [list, setList] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    setList(todos.filter(todo => {\n      if (!todo.title.includes(value)) {\n        return false;\n      }\n\n      if (select === 'active') {\n        return !todo.completed;\n      }\n\n      if (select === 'completed') {\n        return todo.completed;\n      }\n\n      return true;\n    }));\n  }, [todos, value, select]);\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <input\n        type=\"text\"\n        placeholder=\"title\"\n        onChange={event => setValue(event.target.value)}\n      />\n\n      <select\n        value={select}\n        onChange={event => setSelect(event.target.value)}\n      >\n        <option value=\"all\">all</option>\n        <option value=\"active\">active</option>\n        <option value=\"completed\">completed</option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {list.map(todo => (\n            <li\n              key={todo.id}\n              className={cn({\n                TodoList__item: true,\n                'TodoList__item--unchecked': !todo.completed,\n                'TodoList__item--checked': todo.completed,\n              })}\n            >\n              <label>\n                <input\n                  checked={todo.completed}\n                  type=\"checkbox\"\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n                type=\"button\"\n                onClick={() => {\n                  selectUserId(todo.userId);\n                }}\n              >\n                User&nbsp;#\n                {todo.userId}\n              </button>\n            </li>\n\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nasync function getUrl(endpoint: string) {\n  const response = await fetch(BASE_URL + endpoint);\n\n  if (!response.ok) {\n    throw new Error();\n  }\n\n  return response.json();\n}\n\nexport const getTodos = () => (getUrl('/todos'));\nexport const getUser = (userId: number) => (getUrl(`/users/${userId}`));\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number,\n  selectUserId: (userId: number) => (void),\n};\n\nexport const CurrentUser: React.FC<Props> = ({ userId, selectUserId }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser)\n      .then(() => setError(false))\n      .catch(() => setError(true));\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:&nbsp;\n          {userId}\n        </span>\n      </h2>\n      {user && (\n        <>\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n        </>\n      )}\n      {error && <p>We have a problem</p>}\n      <button\n        className=\"CurrentUser__clear\"\n        type=\"button\"\n        onClick={() => selectUserId(0)}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          selectUserId={setSelectedUserId}\n          todos={todos}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              selectUserId={setSelectedUserId}\n              userId={selectedUserId}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}